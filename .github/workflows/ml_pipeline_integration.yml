name: ML Pipeline Integration Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  integration-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
    
    - name: Generate test data
      run: |
        python scripts/generate_test_data.py --size 1000 --output test_data.csv
        python scripts/generate_test_rules.py --output test_rules.json
    
    - name: Test ML Pipeline Training
      run: |
        python -m src.data_quality_summarizer train-model test_data.csv test_rules.json --output-model ci_model.pkl
    
    - name: Test ML Pipeline Prediction
      run: |
        python -m src.data_quality_summarizer predict --model ci_model.pkl --dataset-uuid test-uuid --rule-code 1 --date 2024-01-01
    
    - name: Test Batch Prediction
      run: |
        echo "dataset_uuid,rule_code,business_date" > batch_test.csv
        echo "test-uuid,1,2024-01-01" >> batch_test.csv
        python -m src.data_quality_summarizer batch-predict --model ci_model.pkl --input batch_test.csv --output batch_results.csv
    
    - name: Run Performance Tests
      run: |
        python -m pytest tests/test_ml/test_performance_benchmarks.py -v
    
    - name: Upload Performance Report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: performance-report
        path: performance_report.json